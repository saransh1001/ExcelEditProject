'stores selected cell's previous value
Dim OldVal

Dim StoreComments() As String
'store the row of the first cell which will be dragged
Dim store_row As Integer
'store the row of the first cell which will be dragged
Dim store_column As Integer
'no of cells on which operation is to be applied
Dim no_of_cells_operationapplied As Integer

' triggers when there is any change in any cell of the worksheet
        Private Sub Worksheet_Change(ByVal Target As Range)
       no_of_cells_operationapplied = (Selection.Cells.Count)
            Dim xrng As Range
              Dim CurrentTime
                   Dim UserName As String
                   Dim CurrentComment As String
                   UserName = Application.UserName
'                checking if the operation is just simple editing one cell or dragging a cell
                If Target.Cells.Count = 1 Then
'                if operation is just on one cell
                If no_of_cells_operationapplied = 1 Then
                Call check(Target.Cells.Row, Target.Cells.Column)
'                mark store_row to -1 to show that we have done single cell operation
                store_row = -1
                End If
'                save the value of row and coloumn of the first cell of dragging to apply comment it that later on
                If no_of_cells_operationapplied > 1 Then
                store_row = Target.Cells.Row
                store_column = Target.Cells.Column
                End If
                Exit Sub
                End If
'            when multiple cells are edited at same time ie dragagging of cells
           If Target.Cells.Count > 1 Then
'               dragging operation Is performed store the previous values as we can't change cell's value in between
               ReDim StoreComments(Target.Cells.Count + 1)
              Dim NewComment As String
            Dim StartingPosition As Integer
            Dim EndingPosition  As Integer
             NewComment = ""
             Dim i As Integer
             i = 1
             For Each cell In Target
'             undo the event to see the previous value of the cell
    With Application
        On Error GoTo ErrHandler
        .EnableEvents = False
        .Undo
        OldValue = CStr(cell.Value)
        .Undo
        .EnableEvents = True
    End With
    StoreComments(i) = OldValue
    i = i + 1
ErrHandler:
    Application.EnableEvents = True
'    prints the error if any occured
    If Err.Number <> 0 Then
        MsgBox "Error: " & Err.Number & vbNewLine & Err.Description
    End If
    Next
'    now changing the values of comments of each cell from StoreComments array
    i = 1
              For Each cell In Target
               CurrentTime = Now
               Dim CurrentValue As String
               CurrentValue = CStr(cell.Value)
               If CurrentValue = "" Then
               CurrentValue = "blank"
               End If
               If StoreComments(i) = "" Then
               StoreComments(i) = "blank"
               End If

'               formmating new comment in correct format
                CurrentComment = UserName & ", " & CurrentTime & " Changed cell " & cell.Address(0, 0) & " to " & "'" & CurrentValue & "'" & "  from " & "'" & StoreComments(i) & "'" & "."
                 If cell.Value = "" And StoreComments(i) = "blank" Then


                 Else
                 If Not cell.Comment Is Nothing Then
                    CurrentComment = CurrentComment + Chr(10) + Chr(10) + cell.Comment.Text
                    cell.Comment.Delete
                 End If
'                      adding comment to the cell
                      cell.AddComment (CurrentComment)
                      cell.Borders.Color = vbGreen
                      cell.Interior.Color = vbYellow
'                      auto fits the new comment height
                      Call AutoFitTargetComments(ActiveSheet, cell.Comment)
                 End If

                     i = i + 1
    Next
'          adding comment to the first cell of the dragged cells
          If store_row <> -1 Then
          Call check(store_row, store_column)
          End If
           Exit Sub
           End If
        End Sub

Private Sub check(ByVal a As Integer, ByVal b As Integer)
  Dim xrng As Range
              Dim CurrentTime
                   Dim UserName As String
                   Dim CurrentComment As String
                   UserName = Application.UserName
                   CurrentTime = Now

                   If Len(OldVal) = 0 Then
                       OldVal = "blank"
                   End If

                    Dim FinalValue As String
                    FinalValue = CStr(Cells(a, b).Value)


                    If Len(Cells(a, b).Value) = 0 Then
                        FinalValue = "blank"
                    End If
'                    formatting new comment in correct format
                   CurrentComment = UserName & ", " & CurrentTime & " Changed cell " & Cells(a, b).Address(0, 0) & " to " & "'" & FinalValue & "'" & "  from " & "'" & OldVal & "'" & "."
                  If OldVal = "blank" And FinalValue = "blank" Then

                  Else
'                  delteing previous comment if cell have
                    If Not Cells(a, b).Comment Is Nothing Then
                    CurrentComment = CurrentComment + Chr(10) + Chr(10) + Cells(a, b).Comment.Text
                    Cells(a, b).Comment.Delete
                    End If
'                    now adding cell comment and setting color and boundry color values
                      Cells(a, b).AddComment (CurrentComment)
                      Cells(a, b).Interior.ColorIndex = 27
                      Cells(a, b).Borders.ColorIndex = 4
'                      resizing the comment window
            Call AutoFitTargetComments(ActiveSheet, Cells(a, b).Comment)
                  End If
End Sub
   Private Sub Worksheet_SelectionChange(ByVal Target As Range)
'           goes to worksheet change if multiple cells are selected and previous cellls value is extracted there only
'           if single cell if selected then the curent value is set in OldVal which will become previous value later on
            If Target.Cells.Count > 1 Then
           Exit Sub
           End If
            OldVal = CStr(Target.Value)

        End Sub

  Private Sub AutoFitTargetComments(ByVal Sh As Object, ByVal ocomment As Object)
            Call FitToTextTall(ocomment, Sh)
End Sub


Private Function FitToTextTall(ByVal ocomment As Comment, ByVal ParentSheet As Worksheet) As Boolean
'   creates a textbox with same attributes as of the comment box and gets the required height of the comment box from there and sets it
    Dim Width As Single, Height As Single
    Dim oTempTextBox As Shape
'   no change if the sheet have protected content
    If ParentSheet.ProtectContents Then _
        Exit Function
'      speed up the macro
    Application.ScreenUpdating = False
    On Error Resume Next
        ParentSheet.Shapes("TempTextBox").Delete
    Err.Clear
'    copying wight and height of commentbox in some variables
    With ocomment.Shape
        Width = .Width
        Height = .Height
    End With
'    setting the width and height of the textbox same as Of the comment box and renammig it
    Set oTempTextBox = ParentSheet.Shapes.AddTextbox(msoTextOrientationHorizontal, 0, 0, Width, Height)
    oTempTextBox.Name = "TempTextBox"

    With oTempTextBox.TextFrame2
'        all attributes of the comment box are copied in textbox
        .TextRange.Text = ocomment.Text
        .TextRange.Font.Size = ocomment.Shape.TextFrame.Characters.Font.Size
        .TextRange.Font.Name = ocomment.Shape.TextFrame.Characters.Font.Name
        .MarginRight = 0
        .MarginLeft = 0
'        autosets the height of the textbox so that it fits all the given text
        .AutoSize = msoAutoSizeShapeToFitText
    End With
'    resizeing the comment box with the attributes of the textbox
    With ocomment.Shape
        .Height = oTempTextBox.Height + 10
        .AlternativeText = ocomment.Text & "||" & .Width & "||" & .Height
    End With
'   erasing the textbox to free up memory
    oTempTextBox.Delete
'    checkinng if there is any error occured and our task is done sucessfully or not
    If Err.Number = 0 Then _
        FitToTextTall = True

End Function